import type { Page, Media, Faq } from '@/payload-types'
import { generateLexicalContent } from '@/utilities/generateLexicalContent'

export const seedFAQBlockDemo = (
  media: {
    image169: Media | null
    image43: Media | null
    imageSquare: Media | null
  },
  faqs?: Faq[],
) => {
  const faqBlocks = [
    // Introduction
    {
      blockType: 'richTextBlock',
      type: '01',
      maxWidth: 'default',
      columns: 1,
      content: generateLexicalContent([
        {
          type: 'h2',
          text: 'ุงูููุท ุงููุงูู ุงูุนุฑุถ (Full Width)',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'ูุนุฑุถ ูุฐุง ุงูููุท ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ูู ุชุฎุทูุท ูุดุบู ูุงูู ุงูุนุฑุถ ุงููุชุงุญุ ููุง ูููุฑ ูุณุงุญุฉ ุฃูุจุฑ ูููุญุชูู.',
          direction: 'rtl',
        },
      ]),
    },

    // FAQ Block 01 - Full Width
    {
      blockType: 'faqBlock',
      type: '01',
      faqs: faqs,
    },

    // Divider
    {
      blockType: 'dividerBlock',
      size: 'large',
      enableDivider: true,
    },

    // Split layout introduction
    {
      blockType: 'richTextBlock',
      type: '01',
      maxWidth: 'default',
      columns: 1,
      content: generateLexicalContent([
        {
          type: 'h2',
          text: 'ุงูููุท ุงููููุณู (Split Layout)',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'ููุณู ูุฐุง ุงูููุท ุงููุณุงุญุฉ ุจูู ุนููุงู ุงููุณู ุนูู ุงููุณุงุฑ ูุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุนูู ุงูููููุ ููุง ูุนุทู ุชูุธููุงู ุฃูุถู ูููุญุชูู.',
          direction: 'rtl',
        },
      ]),
    },

    // FAQ Block 02 - Split with Block Header
    {
      blockType: 'faqBlock',
      type: '02',
      blockHeader: {
        type: 'start',
        subhead: 'ูุฑูุฒ ุงููุณุงุนุฏุฉ',
        heading: 'ุฃุณุฆูุฉ ุดุงุฆุนุฉ ุฅุถุงููุฉ',
        description: generateLexicalContent([
          {
            type: 'p',
            text: 'ุฅููู ุงููุฒูุฏ ูู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุงูุชู ูุฏ ุชุณุงุนุฏู ูู ููู ููููุฉ ุงุณุชุฎุฏุงู ุงููุธุงู ุจุดูู ุฃูุถู.',
            direction: 'rtl',
          },
        ]),
      },
      faqs: faqs,
    },

    // Usage Guidelines
    {
      blockType: 'richTextBlock',
      type: '02',
      maxWidth: 'default',
      columns: 1,
      content: generateLexicalContent([
        {
          type: 'h2',
          text: 'ุฅุฑุดุงุฏุงุช ุงูุงุณุชุฎุฏุงู',
          direction: 'rtl',
        },
        {
          type: 'h3',
          text: 'ูุชู ุชุณุชุฎุฏู ุงูููุท ุงููุงูู ุงูุนุฑุถุ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุนูุฏูุง ุชุฑูุฏ ุงูุชุฑููุฒ ุนูู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ููุท',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ูู ุงูุตูุญุงุช ุงููุฎุตุตุฉ ููุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุนูุฏูุง ุชููู ุงูุฃุณุฆูุฉ ุทูููุฉ ูุชุญุชุงุฌ ูุณุงุญุฉ ุฃูุจุฑ',
          direction: 'rtl',
        },
        {
          type: 'h3',
          text: 'ูุชู ุชุณุชุฎุฏู ุงูููุท ุงููููุณูุ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุนูุฏูุง ุชุฑูุฏ ุฅุถุงูุฉ ุณูุงู ุฃู ููุฏูุฉ ููุฃุณุฆูุฉ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ูู ุฃูุณุงู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุถูู ุตูุญุงุช ุฃุฎุฑู',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุนูุฏูุง ุชุฑูุฏ ุชูุธูู ุงููุญุชูู ุจุตุฑูุงู',
          direction: 'rtl',
        },
      ]),
    },

    // Best Practices
    {
      blockType: 'richTextBlock',
      type: '02',
      maxWidth: 'small',
      columns: 1,
      content: generateLexicalContent([
        {
          type: 'h3',
          text: '๐ก ูุตุงุฆุญ ูููุฉ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุงูุชุจ ุฃุณุฆูุฉ ูุงุถุญุฉ ููุจุงุดุฑุฉ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ูุฏู ุฅุฌุงุจุงุช ููุตูุฉ ููููุฏุฉ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุฑุชุจ ุงูุฃุณุฆูุฉ ุญุณุจ ุงูุฃูููุฉ',
          direction: 'rtl',
        },
        {
          type: 'p',
          text: 'โข ุญุฏุซ ุงููุญุชูู ุจุงูุชุธุงู',
          direction: 'rtl',
        },
      ]),
    },
  ]

  const heroData: Page['hero'] = {
    type: 'mediumImpact',
    richText: generateLexicalContent([
      {
        type: 'h1',
        text: 'ุนุฑุถ ุชูุถูุญู ูุจููู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ',
        direction: 'rtl',
      },
      {
        type: 'p',
        text: 'ุงุณุชูุดู ุงูุทุฑู ุงููุฎุชููุฉ ูุนุฑุถ ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุจุงุณุชุฎุฏุงู ุงูููุทูู: ุงูุนุฑุถ ุงููุงูู ูุงูุชุฎุทูุท ุงููููุณู.',
        direction: 'rtl',
      },
    ]),
    media: {
      desktop: {
        light: media.image169?.id,
        dark: media.image169?.id,
      },
      mobile: {
        light: null,
        dark: null,
      },
    },
    links: [
      {
        link: {
          type: 'custom',
          url: '/blocks-demo',
          label: 'ุงูุนูุฏุฉ ูุนุฑุถ ุงูุจูููุงุช',
          newTab: false,
        },
      },
    ],
  }

  const pageData: Omit<Page, 'id' | 'updatedAt' | 'createdAt' | 'sizes'> = {
    title: 'FAQ Block Demo',
    slug: 'blocks-demo/faq-block',
    hero: heroData,
    layout: faqBlocks as any,
    meta: {
      title: 'FAQ Block Demo | Marn',
      description:
        'ุงุณุชูุดู ุงูุทุฑู ุงููุฎุชููุฉ ูุนุฑุถ ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุจุงุณุชุฎุฏุงู ุงูููุทูู: ุงูุนุฑุถ ุงููุงูู ูุงูุชุฎุทูุท ุงููููุณู.',
    },
    _status: 'published',
  }

  return pageData as Page
}
